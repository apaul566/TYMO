/*.container{
    max-width: 960px;
    margin: 0 auto;
    background: #f9f9f9;
    font-size: 24px;
    
  }*/
    
  /* Main content */
  .main {
    margin-top: 30px; /* Add a top margin to avoid content overlay */
  }

  body {
    display: flex;
    flex-direction: column;
    text-align: center; 
    align-items: center;
    justify-content: center;
  }

  .indexbody {
    display: flex;
    flex-direction: column;
    text-align: center; 
    align-items: center;
    justify-content: center;
    overflow: hidden;
    
  }
 
  .topnav {
    background-color: #333;
    overflow: hidden;
    position: fixed; /* Set the navbar to fixed position */
    top: 0; /* Position the navbar at the top of the page */
    width: 100%; /* Full width */
  }
  
  /* Style the links inside the navigation bar */
  .topnav a {
    float: left;
    color: #f2f2f2;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 17px;
  }
  
  /* Change the color of links on hover */
  .topnav a:hover {
    background-color: #ddd;
    color: black;
  }
  
  /* Add a color to the active/current link */
  .topnav a.active {
    background-color: #4CAF50;
    color: white;
  }

.wrapper {
  /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
  height: 100vh;
  width: 100vw;
  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  overflow-x: hidden;
  /* Enable scrolling on the page. */
  overflow-y: auto;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 2px;
}

.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 100vh;

  /* For text formatting. */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: white;
  /*text-shadow: 0 0 5px #000;*/
}

.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */
  z-index: -1;
}

/* The styling for the static div. */
.static {
  background:rgb(226, 242, 242);
  height: 47vh;
  color: black;
}

/* Sets the actual background images to adorable kitties. This part is crucial. */
.bg1::after {
  background-image: url('https://img.rasset.ie/0011d15e-500.jpg ');

}
.bg2::after {
  background-image: url('https://images.theconversation.com/files/268394/original/file-20190409-2909-1964qt0.jpg?ixlib=rb-1.1.0&rect=115%2C2%2C835%2C417&q=45&auto=format&w=668&h=324&fit=crop');
 
}
.bg3::after {
  background-image: url('http://static-36.sinclairstoryline.com/resources/media/c5d3c1df-1573-47bb-b6e9-bd66b4bb3ad7-large16x9_1280x720_90308P00ICNSS.jpg?1572729273173');
}